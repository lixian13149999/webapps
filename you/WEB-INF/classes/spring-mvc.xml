<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p" xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context" xmlns:mvc="http://www.springframework.org/schema/mvc" xsi:schemaLocation="http://www.springframework.org/schema/beans  
                        http://www.springframework.org/schema/beans/spring-beans.xsd  
                        http://www.springframework.org/schema/context 
                        http://www.springframework.org/schema/context/spring-context.xsd  
                        http://www.springframework.org/schema/tx 
                        http://www.springframework.org/schema/tx/spring-tx.xsd
                        http://www.springframework.org/schema/aop 
                        http://www.springframework.org/schema/aop/spring-aop.xsd
                        http://www.springframework.org/schema/mvc  
                        http://www.springframework.org/schema/mvc/spring-mvc.xsd">
    <!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
    <context:component-scan base-package="com.bcdbook.base.controller" />
    <context:component-scan base-package="com.bcdbook.project.controller" />
    <context:component-scan base-package="com.bcdbook.addr.controller" />
    <context:component-scan base-package="com.bcdbook.user.controller" />
    <context:component-scan base-package="com.bcdbook.message.controller" />    
    <context:component-scan base-package="com.bcdbook.wechat.controller" />
    <context:component-scan base-package="com.bcdbook.util.file" />

     <!--后添加的  weiyuan-->
      <context:component-scan base-package="com.bcdbook.cash.controller" />
       <context:component-scan base-package="com.bcdbook.fund.controller" />
     
    <!-- 这是用来测试的配置项,正式上线前需要去掉 -->
    <context:component-scan base-package="com.bcdbook.demos" />


    <mvc:annotation-driven/>
    <!--避免IE执行AJAX时，返回JSON出现下载文件 -->
    <bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/html;charset=UTF-8</value>
            </list>
        </property>
    </bean>
    <!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
    <!-- <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"> -->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="mappingJacksonHttpMessageConverter" />
                <!-- JSON转换器 -->
                <!-- 新增的StringMessageConverter bean-->
                <!-- <ref bean="stringHttpMessageConverter" />
                 <ref bean="jsonHttpMessageConverter" />           
                 <ref bean="formHttpMessageConverter" /> -->
            </list>
        </property>
    </bean>
    <!-- 定义跳转的文件的前后缀 ，视图模式配置-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
        <!-- 设置前置名 -->
        <property name="prefix" value="/WEB-INF/views/" />
        <!-- 设置后缀 -->
        <property name="suffix" value=".jsp" />
        <!-- <property name="suffix" value=".html" /> -->
    </bean>

    <!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 默认编码 -->
        <property name="defaultEncoding" value="utf-8" />
        <!-- 文件大小最大值 -->
        <property name="maxUploadSize" value="1048576000" />
        <!-- 内存中的最大值 -->
        <property name="maxInMemorySize" value="40960" />
    </bean>


    <!-- 拦截器配置 -->
    <!-- 设置过滤掉的静态资源 -->
    <!-- 可以通过这种方式,映射出所有的公共资源 -->
    <!-- <mvc:annotation-driven/> -->
    <!-- 
    <mvc:resources location="/public/" mapping="/public/**" />
    <mvc:resources location="/static/" mapping="/static/**" />
     -->

    <!-- 配置拦截器, 多个拦截器,顺序执行 -->
    <mvc:interceptors>
        <mvc:interceptor>
            <!-- 匹配的是url路径， 如果不配置或/**,将拦截所有的Controller -->
            <mvc:mapping path="/**" />
            
            <!-- 拦截时过滤掉的请求路径 -->
            <mvc:exclude-mapping path="/wechat/login" />
            <mvc:exclude-mapping path="/wechat/getCode" />
            <mvc:exclude-mapping path="/wechat/getUserInfo" />
            <mvc:exclude-mapping path="/login" />
            <mvc:exclude-mapping path="/login/getCode" />
            <mvc:exclude-mapping path="/proj" />
            <mvc:exclude-mapping path="/proj/listJson" />
            <mvc:exclude-mapping path="/proj/payBack" />    
            <mvc:exclude-mapping path="/proj/info" />    
            
            <!-- weiyuan添加防止拦截后天admin操作 --> 
            <mvc:exclude-mapping path="/admin/login" />
            <mvc:exclude-mapping path="/admin/getCode" />
            
            <!-- <mvc:exclude-mapping path="/admin/**" /> -->
            <!-- 执行拦截的处理的方法 -->
            <bean class="com.bcdbook.util.interceptor.CommonInterceptor"></bean>
        </mvc:interceptor>
        <!-- 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法 -->
    </mvc:interceptors>
    <!-- 拦截器配置结束 -->
    
    <!-- <import resource="spring-settime.xml" /> -->
</beans>