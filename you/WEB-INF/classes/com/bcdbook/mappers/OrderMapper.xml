<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!-- 设置映射的dao类 -->
<mapper namespace="com.bcdbook.order.dao.OrderDao">
  

	<resultMap id="BaseResultMap" type="com.bcdbook.order.pojo.Order">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="tag" property="tag" jdbcType="INTEGER" />
		<result column="order_number" property="orderNumber" jdbcType="VARCHAR" />	
		<result column="pay_number" property="payNumber" jdbcType="VARCHAR" />
		<result column="pay_type" property="payType" jdbcType="INTEGER" />
		<result column="proj_id" property="projId" jdbcType="INTEGER" />
		<result column="user_id" property="userId" jdbcType="INTEGER" />
		<result column="money_unit" property="moneyUnit" jdbcType="INTEGER" />
		<result column="prod_count" property="prodCount" jdbcType="INTEGER" />
		<result column="money_count" property="moneyCount" jdbcType="INTEGER" />
		<result column="create_time" property="createTime" jdbcType="VARCHAR" />	
		<result column="pay_time" property="payTime" jdbcType="VARCHAR" />	
		
		<result column="receive" property="receive" jdbcType="INTEGER" />
		<result column="addr_phone" property="addrPhone" jdbcType="VARCHAR" />	
		<result column="addr_real_name" property="addrRealName" jdbcType="VARCHAR" />	
		<result column="addr_addr" property="addrAddr" jdbcType="VARCHAR" />
	    <result column="photo" property="photo" jdbcType="VARCHAR" />	
			
	</resultMap>	
	<!-- 1定义查询的所有参数 -->
	<sql id="Base_Column_List1">
		t_order.id as id, t_order.tag as tag,order_number,pay_number,pay_type,proj_id,user_id,money_unit,prod_count,money_count,create_time,pay_time,receive,addr_phone,addr_real_name,addr_addr,t_user.photo As photo
	</sql>	
	
	<!--2 定义查询的所有参数 -->
	<sql id="Base_Column_List2">
		t_order.id as id, t_order.tag as tag,order_number,pay_number,pay_type,proj_id,user_id,money_unit,prod_count,money_count,create_time,pay_time,receive,addr_phone,addr_real_name,addr_addr
	</sql>
		<!-- 1.增加一条订单记录 -->
	<insert id="insert" parameterType="com.bcdbook.order.pojo.Order">
		insert into t_order (id, tag,order_number,pay_number,pay_type,proj_id,user_id,money_unit,prod_count,money_count,create_time,pay_time,receive,addr_phone,addr_real_name,addr_addr)
		values (#{id,jdbcType=INTEGER},
		#{tag,jdbcType=INTEGER},
		#{orderNumber,jdbcType=VARCHAR},
		#{payNumber,jdbcType=VARCHAR},
		#{payType,jdbcType=INTEGER},
		#{projId,jdbcType=INTEGER},
		#{userId,jdbcType=INTEGER},		
		#{moneyUnit,jdbcType=INTEGER},				
		#{prodCount,jdbcType=INTEGER},
		#{moneyCount,jdbcType=INTEGER},
		#{createTime,jdbcType=VARCHAR},
		#{payTime,jdbcType=VARCHAR},	
		
		#{receive,jdbcType=INTEGER},
		#{addrPhone,jdbcType=VARCHAR},
		#{addrRealName,jdbcType=VARCHAR},
		#{addrAddr,jdbcType=VARCHAR})
			
	</insert>	
	
	
	<!-- 2.根据指定id更新一个项目记录 -->
	<update id="updateOrderById">
	update t_order

	<set>
		<if test="order.tag != null">
			tag = #{order.tag,jdbcType=INTEGER},
		</if>
		<if test="order.orderNumber != null">
			order_number = #{order.orderNumber,jdbcType=VARCHAR},
		</if>
		
		<if test="order.payNumber != null">
			pay_number = #{order.payNumber,jdbcType=VARCHAR},
		</if>
		<if test="order.payType != null">
			pay_type = #{order.payType,jdbcType=INTEGER},
		</if>

		<if test="order.projId != null">
			proj_id = #{order.projId,jdbcType=INTEGER},
		</if>
		<if test="order.userId != null">
			user_id = #{order.userId,jdbcType=INTEGER},
		</if>
		<if test="order.moneyUnit != null">
			money_unit = #{order.moneyUnit,jdbcType=INTEGER},
		</if>
		<if test="order.userId != null">
			prod_count = #{order.userId,jdbcType=INTEGER},
		</if>
		<if test="order.moneyCount != null">
			money_count = #{order.moneyCount,jdbcType=INTEGER},
		</if>
		<if test="order.createTime != null">
			createTime = #{order.createTime,jdbcType=VARCHAR},
		</if>
		<if test="order.payTime != null">
			payTime = #{order.payTime,jdbcType=VARCHAR},
		</if>
		</set>
	where id =
	#{orderId,jdbcType=INTEGER}
</update>

<!--3. 根据id查找指定订单 -->
	<select id="getOrderById" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List2" />
		from t_order
		where id = #{orderId,jdbcType=INTEGER} 		
	</select>	
	
		
	<!-- 4.根据订单id把订单状态设置为支付完成 -->
	<update id="setOrderPayed">
	update t_order
	<set>
	    pay_type = 1,
	    pay_number=#{payNumber,jdbcType=VARCHAR},
	    pay_time=#{payTime,jdbcType=VARCHAR}
	  </set>	    		
	where id =#{orderId,jdbcType=INTEGER}
	
    </update>
	
	
	
<!--5.根据订单编号查询订单-->
	<select id="getOrderByNumber" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List2" />
		from t_order
		where order_number = #{orderNumber,jdbcType=VARCHAR} 		
	</select>	
	
	<!--6.根据用户userId和项目projId查询用户该项目的持有量-->
	<select id="getKeepedProdByUserIdAndProjId"  resultType="Integer">
		select
		sum(prod_count)
		from t_order
		where  tag=1  AND
		       pay_type=1 AND
		 user_id = #{userId,jdbcType=INTEGER} 	AND
		
		     proj_id = #{projId,jdbcType=INTEGER} 			
	</select>	
	
	<!--7.根据项目Id查询该项目支持者的信息，（订单信息）    -->
	<select id="getOrderByPId" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List1" />
		from t_user JOIN t_order ON t_user.id=t_order.user_id
		where   t_order.tag=1 AND
				t_user.tag=1 AND 
		        t_order.pay_type=1 AND
		
		proj_id = #{projId,jdbcType=INTEGER} 		
	</select>	
	
	
	<!--8.根据项目id 查询该项目所有已完成订单的累计金额    -->
	<select id="sumFinishOrderMoneyByPID" resultType="Integer">
		select
		sum(money_count)
		from t_order 
		where  tag=1 AND <!--要检测订单是否可用  -->
		pay_type=1 AND
		proj_id = #{projId,jdbcType=INTEGER} 		
	</select>	
	
		<!--9查找距离当前系统时间超过十分钟的订单 -->	
	<select id="orderOverTen"  resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List2" />		
		from t_order 
		where tag=1 AND <!--要检测订单是否可用  -->
			 pay_type AND  
		(UNIX_TIMESTAMP(NOW())-CAST(LEFT(create_time,10) AS UNSIGNED))/60>10	
	</select>
	
	
	
	<!--10根据订单id删除订单（伪删除） -->
	<update id="setOrderCancle">
	update t_order
	set
	    tag = 2	  	    		
	where id =#{orderId,jdbcType=INTEGER}
		
    </update>
    
    
    
    <!--11.根据项目id查找已经支付的支持该项目的订单  -->
    	<select id="getPayOrdersByProjId"  resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List2" />		
		from t_order 
		where tag=1 AND <!--要检测订单是否可用  -->	
		pay_type=1 AND	
		proj_id =#{projId,jdbcType=INTEGER}	
	</select>
    
	
	<!--  select * from t_fund WHERE (UNIX_TIMESTAMP(NOW())-CONVERT(LEFT(create_time,10) ,UNSIGNED))/60>16000-->
</mapper>


