<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!-- 设置映射的dao类 -->
<mapper namespace="com.bcdbook.addr.dao.AddrDao">

	<resultMap id="BaseResultMap" type="com.bcdbook.addr.pojo.Addr">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="tag" property="tag" jdbcType="INTEGER" />
		<result column="province" property="province" jdbcType="VARCHAR" />
	    <result column="province_code" property="provinceCode" jdbcType="INTEGER" />		
		<result column="city" property="city" jdbcType="VARCHAR" />
		<result column="county" property="county" jdbcType="VARCHAR" />
		<result column="info_addr" property="infoAddr" jdbcType="VARCHAR" />
		<result column="user_id" property="userId" jdbcType="INTEGER" />
		<result column="real_name" property="realName" jdbcType="VARCHAR" />
		<result column="phone" property="phone" jdbcType="VARCHAR" />	
		<result column="is_default" property="isDefault" jdbcType="INTEGER" />	
	</resultMap>	
	<!-- 定义查询的所有参数 -->
	<sql id="Base_Column_List">
		id, tag, province,province_code,city,county,info_addr,user_id,real_name,phone,is_default
	</sql>	
	
	
	
	<!-- 地址选择的查询映射和查询参数的定义 -->
	<resultMap id="AddressMap" type="com.bcdbook.addr.pojo.Address">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="code" property="code" jdbcType="INTEGER" />		
		<result column="p_code" property="parentCode" jdbcType="INTEGER" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="level" property="level" jdbcType="INTEGER" />	
	</resultMap>	
	<!-- 定义查询的所有参数 -->
	<sql id="Address_Column_List">
		id, code, p_code,name,level
	</sql>	
	
	
	
		<!-- 1.增加一条地址记录 -->
	<insert id="insert" parameterType="com.bcdbook.addr.pojo.Addr">
		insert into t_addr (id, tag, province,province_code,city,county,info_addr,user_id,real_name,phone,is_default)
		values (#{id,jdbcType=INTEGER},
		#{tag,jdbcType=INTEGER},
		#{province,jdbcType=VARCHAR},
		#{provinceCode,jdbcType=INTEGER},
		#{city,jdbcType=VARCHAR},
		#{county,jdbcType=VARCHAR},		
		#{infoAddr,jdbcType=VARCHAR},				
		#{userId,jdbcType=INTEGER},
		#{realName,jdbcType=VARCHAR},
		#{phone,jdbcType=VARCHAR},
		#{isDefault,jdbcType=INTEGER})		
	</insert>	
	
	
	<!-- 2.根据指定id更新一个项目记录 -->
	<update id="updateAddrById">
	update t_addr

	<set>
		<if test="addr.tag != null">
			tag = #{addr.tag,jdbcType=INTEGER},
		</if>
		<if test="addr.province != null">
			province = #{addr.province,jdbcType=VARCHAR},
		</if>
		<if test="addr.provinceCode != null">
			province_code = #{addr.provinceCode,jdbcType=INTEGER},
		</if>
		<if test="addr.city != null">
			city = #{addr.city,jdbcType=VARCHAR},
		</if>
		<if test="addr.county != null">
			county = #{addr.county,jdbcType=VARCHAR},
		</if>
		<if test="addr.infoAddr != null">
			info_addr = #{addr.infoAddr,jdbcType=VARCHAR},
		</if>
		<if test="addr.userId != null">
			user_id = #{addr.userId,jdbcType=INTEGER},
		</if>
		<if test="addr.realName != null">
			real_name = #{addr.realName,jdbcType=VARCHAR},
		</if>
		<if test="addr.phone != null">
			phone = #{addr.phone,jdbcType=VARCHAR},
		</if>
		<if test="addr.isDefault != null">
			is_default = #{addr.isDefault,jdbcType=INTEGER},
		</if>
		</set>
	where id =
	#{addrId,jdbcType=INTEGER}
</update>

<!--3.根据地址的id删除一个地址:伪删除:实际上是把标志tag设置为2:删除(1.正常2.删除)-->
	<update id="deleteAddr" >
		update t_addr
		set
		tag =2		
		where id =
		#{addrId,jdbcType=INTEGER}
	</update> 
	
	<!--4.根据用户id查询该用户所有保存地址的集合，并按照添加时间降序排列-->

	<select id="listAddrDesc" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from t_addr
		where user_id = #{userId,jdbcType=INTEGER} ORDER BY id DESC		
	</select> 
	
	
	<!--5.根据地址的id和用户id把一条地址设为默认-->
	<update id="addrToDefault" >
		update t_addr
		set
		is_default =1		
		where id =#{addrId,jdbcType=INTEGER}		
	</update>  
	
	<!-- 6.根据用户id获取默认地址-->

	<select id="getDefaultAddrByUserId" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from t_addr
		where user_id = #{userId,jdbcType=VARCHAR} AND 
		       is_default=1		
	</select>	
	<!-- 6.根据用户id获取默认地址-->

	<select id="getAddrById" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from t_addr
		where id = #{addrId,jdbcType=VARCHAR}
	</select>	
	
	<!-- 7.根据父级节点查询级联地址子节点的集合-->
	<select id="listAddress" resultMap="AddressMap">
		select
		<include refid="Address_Column_List" />
		from tb_prov_city_area_street
		where p_code = #{pCode,jdbcType=VARCHAR}
	</select>
	
	<!--8.把一条地址记录设为非默认-->
	<update id="addrUndefault" >
		update t_addr
		set
		is_default =2		
		where id =#{addrId,jdbcType=INTEGER}		
	</update>  
	
</mapper>


