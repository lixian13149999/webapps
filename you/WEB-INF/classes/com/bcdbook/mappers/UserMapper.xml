<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!-- 设置映射的dao类 -->
<mapper namespace="com.bcdbook.user.dao.UserDao">
	<!-- 设置映射的数据模型 -->
	<resultMap id="BaseResultMap" type="com.bcdbook.user.pojo.User">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="tag" property="tag" jdbcType="INTEGER" />
		<result column="power" property="power" jdbcType="INTEGER" />
		<result column="username" property="username" jdbcType="VARCHAR" />
		<result column="password" property="password" jdbcType="VARCHAR" />
		<result column="realname" property="realname" jdbcType="VARCHAR" />
		<result column="nickname" property="nickname" jdbcType="VARCHAR" />
		<result column="email" property="email" jdbcType="VARCHAR" />
		<result column="phone" property="phone" jdbcType="VARCHAR" />
		<result column="openid" property="openid" jdbcType="VARCHAR" />
		<result column="add_time" property="addTime" jdbcType="VARCHAR" />
		<result column="update_time" property="updateTime" jdbcType="VARCHAR" />		
		<result column="last_login_time" property="lastLoginTime" jdbcType="VARCHAR" />
		<result column="create_code_time" property="createCodeTime" jdbcType="VARCHAR" />
		<result column="photo" property="photo" jdbcType="VARCHAR" />		
		<result column="hold_money" property="holdMoney" jdbcType="INTEGER" />
	</resultMap>
	
	<!-- 定义查询的所有参数 -->
	<sql id="Base_Column_List">
		t_user.id as id, tag, power,username,password,realname,nickname,email,phone,openid,add_time,update_time,last_login_time,create_code_time,photo,hold_money
	</sql>
	
	<!-- 定义查询的所有参数 -->
	<sql id="Base_Column_List0">
		t_user.id as id, tag, power,username,password,realname,nickname,email,phone,openid,FROM_UNIXTIME(LEFT(add_time,10),"%Y-%m-%d") as add_time,update_time,
		FROM_UNIXTIME(LEFT(last_login_time,10),"%Y-%m-%d") as last_login_time,create_code_time,photo,hold_money
	</sql>
	<!-- 根据手机号码和验证码(对应password字段)获取用户 -->
	<select id="selectUserByPhoneAndCode" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from t_user
		where phone = #{phone,jdbcType=VARCHAR} AND
		password = #{password,jdbcType=VARCHAR}
	</select>
	<!-- ******************************************************** -->
	<!--插入一条用户信息 -->
	<insert id="insert" parameterType="com.bcdbook.user.pojo.User">
		insert into t_user (id, tag, power,username,password,realname,nickname,email,phone,openid,add_time,
		update_time,last_login_time,create_code_time,photo,hold_money)
		values (#{id,jdbcType=INTEGER},
		#{tag,jdbcType=INTEGER},
		#{power,jdbcType=INTEGER},		
		#{username,jdbcType=VARCHAR},		
		#{password,jdbcType=VARCHAR},
		#{realname,jdbcType=VARCHAR},
		#{nickname,jdbcType=VARCHAR},
		#{email,jdbcType=VARCHAR},		
		#{phone,jdbcType=VARCHAR},
		#{openid,jdbcType=VARCHAR},
		#{addTime,jdbcType=VARCHAR},
		#{updateTime,jdbcType=VARCHAR},	
		#{lastLoginTime,jdbcType=VARCHAR},	
		#{createCodeTime,jdbcType=VARCHAR},	
		#{photo,jdbcType=VARCHAR},					
		#{holdMoney,jdbcType=INTEGER})
	</insert>
	 <!-- 伪删除一条用户数据:更新tag 标记为2:锁定状态-->		
      <update id="deleteUser" parameterType="com.bcdbook.user.pojo.User">
		update t_user
		set
		tag =2		
		where id =
		#{id,jdbcType=INTEGER}
	</update> 
	<!-- 根据id查找指定用户 -->
	<select id="selectUserById" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from t_user
		where id = #{id,jdbcType=INTEGER} 
		
	</select>
	<!-- ******************************************************** -->
	<!-- 根据手机号码查找用户 -->	
		<select id="selectUserByPhone" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from t_user
		where phone = #{phone,jdbcType=VARCHAR} 
	</select>
	
	<!-- 根据用户名查找用户 -->	
	<select id="getUserByUserName" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from t_user
		where username = #{userName,jdbcType=VARCHAR} 
	</select>
	<!-- ******************************************************** -->
	<!-- 根据openId查找用户 -->	
		<select id="getUserByOpenId" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from t_user
		where openId = #{openId,jdbcType=VARCHAR} 
	</select>
	<!-- 给用户绑定验证码和验证码生成的时间 -->	
	<update id="setUserCode" parameterType="com.bcdbook.user.pojo.User">
		update t_user
		set
		password = #{password,jdbcType=VARCHAR}	,	
		create_code_time = #{createCodeTime,jdbcType=VARCHAR}			
		where id = #{id,jdbcType=INTEGER}
	</update>
	<!-- 更新所有对象中包含的属性到数据库中的column选择性更新开始-->	
	 <update id="updateUser" parameterType="com.bcdbook.user.pojo.User">
		update t_user
		<set>
		   <if test="tag != null">
				tag = #{tag,jdbcType=INTEGER},
			</if>
			<if test="tag != null">
				power = #{power,jdbcType=VARCHAR},
			</if>
			
			<if test="username != null">
				username = #{username,jdbcType=VARCHAR},
			</if>			
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>			
			<if test="realname != null">
				realname = #{realname,jdbcType=VARCHAR},
			</if>
			<if test="nickname != null">
				nickname = #{nickname,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				email = #{email,jdbcType=VARCHAR},
			</if>			
			<if test="phone != null">
				phone = #{phone,jdbcType=VARCHAR},
			</if>
			<if test="openid != null">
				openid = #{openid,jdbcType=VARCHAR},
			</if>
			<if test="addTime != null">
				add_time = #{addTime,jdbcType=VARCHAR},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=VARCHAR},
			</if>
			<if test="lastLoginTime != null">
				last_login_time = #{lastLoginTime,jdbcType=VARCHAR},
			</if>
			<if test="createCodeTime != null">
				create_code_time = #{createCodeTime,jdbcType=VARCHAR},
			</if>
			<if test="photo != null">
				photo = #{photo,jdbcType=VARCHAR},
			</if>
			<if test="holdMoney != null">
				hold_money = #{holdMoney,jdbcType=INTEGER},
			</if>			
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update> 
   <!--9. 更改用户昵称-->
   
   
    <update id="changeNickeName">
		update t_user
		set
				nickname = #{nickName,jdbcType=INTEGER}
			
		where id = #{userId,jdbcType=INTEGER}
	</update> 
	
	<!-- 修改用户头像 -->
    <update id="changePhoto">
		update t_user
		set
				photo = #{photo,jdbcType=INTEGER}
			
		where id = #{userId,jdbcType=INTEGER}
	</update> 
	<!--10.设置用户的holdMoney-->
   
   
    <update id="resetHoldMoneyByUId">
		update t_user
		set
				hold_money = #{holdMoney,jdbcType=INTEGER}
			
		where id = #{userId,jdbcType=INTEGER}
	</update> 
   
   
   
   <!-- 11.查找发起项目的用户的集合分页查询startPage,pageSize-->	
		<select id="getFUserList" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List0" />
		from t_user join t_user_proj ON t_user.id=t_user_proj.user_id
		where t_user.tag=1 AND
		 t_user_proj.reason=1  group by t_user.id limit #{startPage},#{pageSize}
	</select>
	
	
	 <!-- 12.统计按照当分页大小查询的发起项目者的总页数数-->	
		<select id="countFUserPage" resultType="int">
		select
			ceil(count(t_user.id)/#{pageSize})
		from t_user join t_user_proj ON t_user.id=t_user_proj.user_id
		where t_user.tag=1 AND
		 t_user_proj.reason=1 group by t_user.id limit
	</select>
	
	
	
	 <!-- 13.查找支持项目的用户的集合(拼)-->	
		<select id="getZUserList" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List0" />
		from t_user join t_user_proj ON t_user.id=t_user_proj.user_id
		where t_user.tag=1 AND
		 t_user_proj.reason=2 group by t_user.id limit #{startPage},#{pageSize}
	</select>
	
	 <!-- 14.统计按照当分页大小查询支持项目者的总页数-->	
		<select id="countZUserPage" resultType="int">
		select
			ceil(count(t_user.id)/#{pageSize})
		from t_user join t_user_proj ON t_user.id=t_user_proj.user_id
		where t_user.tag=1 AND
		 t_user_proj.reason=2 group by t_user.id 
	</select>
	
   
    <!-- 选择性更新结束-->
   <!-- ******************************************************** -->
	
	<!-- <select id="selectByNameAndPassword" resultMap="BaseResultMap" >
		select
		<include refid="Base_Column_List" />
		from t_user
		where user_name = #{userName,jdbcType=VARCHAR} AND 
		pwd = #{password,jdbcType=VARCHAR}
	</select> -->
	<!-- 根据用户id查找用户 -->
	<!-- <select id="selectById" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from t_user
		where id = #{id,jdbcType=INTEGER}
	</select> -->
	
	<!-- 根据用户名userName查找用户 -->
	<!-- <select id="selectByName" resultMap="BaseResultMap" parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from t_user
		where user_name = #{userName,jdbcType=VARCHAR}
	</select> -->
	
	<!-- 根据用户名userName和密码password查找用户 -->	
	<!-- <select id="selectByNameAndPassword" resultMap="BaseResultMap" >
		select
		<include refid="Base_Column_List" />
		from t_user
		where user_name = #{userName,jdbcType=VARCHAR} AND 
		pwd = #{password,jdbcType=VARCHAR}
	</select> -->
	
	<!-- 根据根据主键id 删除用户 -->
	<!-- <delete id="deleteById" parameterType="java.lang.Integer">
		delete from t_user
		where id
		= #{id,jdbcType=INTEGER}
	</delete> -->
	
	<!-- 插入用户信息，暂时不用 -->
	<!-- <insert id="insert" parameterType="com.bcdbook.user.pojo.User">
		insert into t_user (id,
		user_name, pwd,
		age)
		values (#{id,jdbcType=INTEGER},
		#{userName,jdbcType=VARCHAR},
		#{pwd,jdbcType=VARCHAR},
		#{age,jdbcType=INTEGER})
	</insert> -->
		
	<!-- 选择性添加开始 -->
	<!-- <insert id="insertSelective" parameterType="com.bcdbook.user.pojo.User">
		insert into t_user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="userName != null">
				user_name,
			</if>
			<if test="pwd != null">
				pwd,
			</if>
			<if test="age != null">
				age,
			</if>
			
			<if test="gender != null">
				gender,
			</if>
			<if test="phone != null">
				phone,
			</if>
			<if test="email != null">
				email,
			</if>
			<if test="openId != null">
				open_id,
			</if>
			<if test="addr != null">
				addr,
			</if>
			<if test="company != null">
				company,
			</if>
			<if test="department != null">
				department,
			</if>
			<if test="position != null">
				position,
			</if>
			<if test="userType != null">
				user_type,
			</if>
			<if test="isLock != null">
				is_lock,
			</if>
			<if test="addTime != null">
				add_time,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
			
			<if test="remark != null">
				remark,
			</if>
			
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="userName != null">
				#{userName,jdbcType=VARCHAR},
			</if>
			<if test="pwd != null">
				#{pwd,jdbcType=VARCHAR},
			</if>
			<if test="age != null">
				#{age,jdbcType=INTEGER},
			</if>
			<if test="gender != null">
				#{gender,jdbcType=INTEGER},
			</if>
			<if test="phone != null">
				#{phone,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				#{email,jdbcType=VARCHAR},
			</if>
			<if test="openId != null">
				#{openId,jdbcType=VARCHAR},
			</if>
			<if test="addr != null">
				#{addr,jdbcType=VARCHAR},
			</if>
			<if test="company != null">
				#{company,jdbcType=INTEGER},
			</if>
			<if test="department != null">
				#{pwd,jdbcType=INTEGER},
			</if>
			<if test="position != null">
				#{position,jdbcType=INTEGER},
			</if>
			<if test="userType != null">
				#{userType,jdbcType=INTEGER},
			</if>
			<if test="isLock != null">
				#{isLock,jdbcType=INTEGER},
			</if>
			<if test="addTime != null">
				#{addTime,jdbcType=VARCHAR},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=VARCHAR},
			</if>
			<if test="remark != null">
				#{remark,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert> -->
	<!-- 选择性添加结束 -->	
	
	<!-- 根据传入的user对象所携带的数据，根据id选择性更新user信息-->
	<!-- 选择性更新开始-->	
	<!-- <update id="updateByPrimaryKeySelective" parameterType="com.bcdbook.user.pojo.User">
		update t_user
		<set>
			<if test="userName != null">
				user_name = #{userName,jdbcType=VARCHAR},
			</if>
			<if test="pwd != null">
				pwd = #{pwd,jdbcType=VARCHAR},
			</if>
			<if test="age != null">
				age = #{age,jdbcType=INTEGER},
			</if>
			<if test="gender != null">
				gender = #{gender,jdbcType=INTEGER},
			</if>
			<if test="phone != null">
				phone = #{phone,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				email = #{email,jdbcType=VARCHAR},
			</if>
			<if test="openId != null">
				open_id = #{openId,jdbcType=VARCHAR},
			</if>
			<if test="addr != null">
				addr = #{addr,jdbcType=VARCHAR},
			</if>
			<if test="company != null">
				company = #{company,jdbcType=VARCHAR},
			</if>
			<if test="department != null">
				department = #{department,jdbcType=VARCHAR},
			</if>
			<if test="position != null">
				position = #{position,jdbcType=INTEGER},
			</if>
			<if test="userType != null">
				user_type = #{userType,jdbcType=INTEGER},
			</if>
			<if test="isLock != null">
				is_lock = #{isLock,jdbcType=INTEGER},
			</if>
			<if test="addTime != null">
				add_time = #{addTime,jdbcType=VARCHAR},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=VARCHAR},
			</if>
			<if test="remark != null">
				remark = #{remark,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update> -->
   <!-- 选择性更新结束-->	
	
   <!-- 更新几个基本的user信息，暂时不用。。。-->		
	<!-- <update id="updateByPrimaryKey" parameterType="com.bcdbook.user.pojo.User">
		update t_user
		set
		user_name = #{userName,jdbcType=VARCHAR},
		pwd = #{pwd,jdbcType=VARCHAR},
		age = #{age,jdbcType=INTEGER}
		where id =
		#{id,jdbcType=INTEGER}
	</update> -->
</mapper>


